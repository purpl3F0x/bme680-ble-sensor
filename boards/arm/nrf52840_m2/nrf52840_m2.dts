/*
 * Copyright (c) 2022 Stavros Avramidis <stavros9899@gmail.com>
 * Copyright (c) 2020 makerdiary
 * Copyright (c) 2017 Linaro Limited
 *
 * SPDX-License-Identifier: Apache-2.0
 */

 /dts-v1/;
 #include <nordic/nrf52840_qiaa.dtsi>
 #include "nrf52840_m2-pinctrl.dtsi"
 
 / {
     model = "Makerdiary nRF52840-M2 devkit";
     compatible = "nordic,nrf52840-dk-nrf52840";
 
     chosen {
         zephyr,console = &uart0;
         zephyr,shell-uart = &uart0;
         zephyr,uart-mcumgr = &uart0;
         zephyr,bt-mon-uart = &uart0;
         zephyr,bt-c2h-uart = &uart0;
         zephyr,sram = &sram0;
         zephyr,flash = &flash0;
         zephyr,code-partition = &slot0_partition;
     };
 
     leds {
         compatible = "gpio-leds";
         led0_green: led_0 {
             gpios = <&gpio1 7 GPIO_ACTIVE_LOW>;
             label = "Green LED 0";
         };
         led1_red: led_1 {
             gpios = <&gpio0 30 GPIO_ACTIVE_LOW>;
             label = "Red LED 1";
         };
         led1_green: led_2 {
             gpios = <&gpio0 29 GPIO_ACTIVE_LOW>;
             label = "Green LED 1";
         };
         led1_blue: led_3 {
             gpios = <&gpio0 31 GPIO_ACTIVE_LOW>;
             label = "Blue LED 1";
         };
     };
 
     pwmleds {
         compatible = "pwm-leds";
         red_pwm_led: pwm_led_0 {
             pwms = <&pwm0 0 PWM_MSEC(20) PWM_POLARITY_INVERTED>;
             label = "Red PWM LED 0";
         };
         green_pwm_led: pwm_led_1 {
             pwms = <&pwm0 1  PWM_MSEC(20) PWM_POLARITY_INVERTED>;
             label = "Green PWM LED 1";
         };
         blue_pwm_led: pwm_led_2 {
             pwms = <&pwm0 2  PWM_MSEC(20) PWM_POLARITY_INVERTED>;
             label = "Blue PWM LED 2";
         };
         backlight_pwm_led: pwm_led_3 {
             pwms = <&pwm0 3  PWM_MSEC(20) PWM_POLARITY_INVERTED>;
             label = "Backlight PWM LED 3";
         };
     };
 
     buttons {
         compatible = "gpio-keys";
         button0: button_0 {
             gpios = <&gpio0 19 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>;
             label = "Push button switch 0";
         };
     };
 
     arduino_header: connector {
         compatible = "arduino-header-r3";
         #gpio-cells = <2>;
         gpio-map-mask = <0xffffffff 0xffffffc0>;
         gpio-map-pass-thru = <0 0x3f>;
         gpio-map = <0 0 &gpio0 2 0>, /* A0 */
                    <1 0 &gpio0 3 0>, /* A1 */
                    <2 0 &gpio0 28 0>, /* A2 */
                    <3 0 &gpio0 27 0>, /* A3 */
                    <4 0 &gpio0 26 0>, /* A4 */
                    <5 0 &gpio0 4 0>, /* A5 */
                    <6 0 &gpio0 15 0>, /* D0 */
                    <7 0 &gpio0 16 0>, /* D1 */
                    <8 0 &gpio0 19 0>, /* D2 */
                    <9 0 &gpio0 20 0>, /* D3 */
                    <10 0 &gpio0 21 0>, /* D4 */
                    <11 0 &gpio0 22 0>, /* D5 */
                    <12 0 &gpio0 23 0>, /* D6 */
                    <13 0 &gpio0 24 0>, /* D7 */
                    <14 0 &gpio1 0 0>, /* D8 */
                    <15 0 &gpio1 1 0>, /* D9 */
                    <16 0 &gpio1 2 0>, /* D10 */
                    <17 0 &gpio1 3 0>, /* D11 */
                    <18 0 &gpio1 4 0>, /* D12 */
                    <19 0 &gpio1 7 0>, /* D13 */
                    <20 0 &gpio1 5 0>, /* D14 */
                    <21 0 &gpio1 6 0>; /* D15 */
     };
 
     arduino_adc: analog-connector {
         compatible = "arduino,uno-adc";
         #io-channel-cells = <1>;
         io-channel-map = <0 &adc 0>, /* A0 = P0.02 = AIN0 */
                          <1 &adc 1>, /* A1 = P0.03 = AIN1 */
                          <2 &adc 4>, /* A2 = P0.28 = AIN4 */
                          <5 &adc 2>; /* A5 = P0.04 = AIN2 */
     };
 
     /* These aliases are provided for compatibility with samples */
     aliases {
         sw0 = &button0;
         led0 = &led0_green;
         led1 = &led1_red;
         led2 = &led1_green;
         led3 = &led1_blue;
         led0-green = &led0_green;
         led1-red   = &led1_red;
         led1-green = &led1_green;
         led1-blue  = &led1_blue;
         pwm-led0 = &red_pwm_led;
         pwm-led1 = &green_pwm_led;
         pwm-led2 = &blue_pwm_led;
         pwm-led3 = &backlight_pwm_led;
         red-pwm-led = &red_pwm_led;
         green-pwm-led = &green_pwm_led;
         blue-pwm-led = &blue_pwm_led;
         backlight-pwm-led = &backlight_pwm_led;
         watchdog0 = &wdt0;
         spi-flash0 = &mx25r64;
     };
 };
 
 &adc {
     status = "okay";
 };
 
 &gpiote {
     status = "okay";
 };
 
 &gpio0 {
     status = "okay";
 };
 
 &gpio1 {
     status = "okay";
 };
 
 &uart0 {
     compatible = "nordic,nrf-uart";
     current-speed = <115200>;
     status = "okay";
     pinctrl-0 = <&uart0_default>;
     pinctrl-1 = <&uart0_sleep>;
     pinctrl-names = "default", "sleep";
 };
 
 arduino_i2c: &i2c0 {
     compatible = "nordic,nrf-twi";
     status = "okay";
     pinctrl-0 = <&i2c0_default>;
     pinctrl-1 = <&i2c0_sleep>;
     pinctrl-names = "default", "sleep";
 };
 
 &i2c1 {
     compatible = "nordic,nrf-twi";
     status = "okay";
     pinctrl-0 = <&i2c1_default>;
     pinctrl-1 = <&i2c1_sleep>;
     pinctrl-names = "default", "sleep";
 };
 
 &pwm0 {
     status = "okay";
     pinctrl-0 = <&pwm0_default>;
     pinctrl-1 = <&pwm0_sleep>;
     pinctrl-names = "default", "sleep";
 };
 
 arduino_spi: &spi1 {
     compatible = "nordic,nrf-spi";
     status = "okay";
     pinctrl-0 = <&spi1_default>;
     pinctrl-1 = <&spi1_sleep>;
     pinctrl-names = "default", "sleep";
     cs-gpios = <&arduino_header 16 0>; /* D10 */
 };
 
 
 &spi0 {
     compatible = "nordic,nrf-spi";
     status = "okay";
     pinctrl-0 = <&spi0_default>;
     pinctrl-1 = <&spi0_sleep>;
     pinctrl-names = "default", "sleep";
     cs-gpios = <&gpio0 6 0>,<&gpio0 7 0>;
 
     st7789v@0 {
         compatible = "sitronix,st7789v";
         spi-max-frequency = <20000000>;
         reg = <0>;
         cmd-data-gpios = <&gpio0 8 GPIO_ACTIVE_LOW>;
         reset-gpios = <&gpio1 9 GPIO_ACTIVE_LOW>;
         width = <240>;
         height = <240>;
         x-offset = <80>;
         y-offset = <0>;
         vcom = <0x19>;
         gctrl = <0x35>;
         vrhs = <0x12>;
         vdvs = <0x20>;
         mdac = <0xa0>;
         gamma = <0x01>;
         colmod = <0x05>;
         lcm = <0x2c>;
         porch-param = [ 0c 0c 00 33 33  ];
         cmd2en-param = [ 5a 69 02 01  ];
         pwctrl1-param = [ a4 a1  ];
         pvgam-param = [ D0 04 0D 11 13 2B 3F 54 4C 18 0D 0B 1F 23  ];
         nvgam-param = [ D0 04 0C 11 13 2C 3F 44 51 2F 1F 1F 20 23  ];
         ram-param = [ 00 F0  ];
         rgb-param = [ CD 08 14  ];
     };
 
     sdhc0: sdhc@1 {
         compatible = "zephyr,sdhc-spi-slot";
         reg = <1>;
         status = "okay";
         spi-max-frequency = <24000000>;
     };
 };
 
 
 &qspi {
     status = "okay";
     pinctrl-0 = <&qspi_default>;
     pinctrl-1 = <&qspi_sleep>;
     pinctrl-names = "default", "sleep";
     mx25r64: mx25r6435f@0 {
         compatible = "nordic,qspi-nor";
         reg = <0>;
         writeoc = "pp4io";
         readoc = "read4io";
         sck-frequency = <8000000>;
         jedec-id = [ c2 28 17  ];
         sfdp-bfp = [ e5 20 f1 ff ff ff ff 03 44 eb 08 6b 08 3b 04 bb ee ff ff ff ff ff 00 ff ff ff 00 ff 0c 20 0f 52 10 d8 00 ff 23 72 f5 00 82 ed 04 cc 44 83 68 44 30 b0 30 b0 f7 c4 d5 5c 00 be 29 ff f0 d0 ff ff  ];
         size = <67108864>;
         has-dpd;
         t-enter-dpd = <10000>;
         t-exit-dpd = <35000>;
     };
 };
 
 
 &flash0 {
 
     partitions {
         compatible = "fixed-partitions";
         #address-cells = <1>;
         #size-cells = <1>;
 
         boot_partition: partition@0 {
             label = "mcuboot";
             reg = <0x00000000 0x0000C000>;
         };
         slot0_partition: partition@c000 {
             label = "image-0";
             reg = <0x0000C000 0x00076000>;
         };
         slot1_partition: partition@82000 {
             label = "image-1";
             reg = <0x00082000  0x00076000>;
         };
         
         /*
          * The flash starting at 0x000f8000 and ending at
          * 0x000fffff is reserved for use by the application.
          */
 
         /*
          * Storage partition will be used by FCB/LittleFS/NVS
          * if enabled.
          */
         storage_partition: partition@f8000 {
             label = "storage";
             reg = <0x000f8000 0x00008000>;
         };
     };
 };
 
 &usbd {
     compatible = "nordic,nrf-usbd";
     status = "okay";
 };